<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="0046473b-4b38-4655-af3c-b05764729190" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/Volum.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/chapter.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/chapters_new.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/genre.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/manga.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/manga_new.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/manga_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/mangaworld.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/monthly_manga.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/state.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/trending_now.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/type.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="ProjectId" id="1lIGhSs6Y3lMjbjKfrXCo2uIQnv" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="last_opened_file_path" value="$USER_HOME$" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.path.for.package.eslint" value="project" />
    <property name="node.js.path.for.package.tslint" value="project" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
  </component>
  <component name="RunManager" selected="Go Test.TestManga_GetVisual in github.com/KiritoNya/mangaworld">
    <configuration name="TestManga_GetArtists in github.com/KiritoNya/mangaworld" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="mangaworld" />
      <working_directory value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/KiritoNya/mangaworld" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <pattern value="^\QTestManga_GetArtists\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestManga_GetAuthor in github.com/KiritoNya/mangaworld" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="mangaworld" />
      <working_directory value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/KiritoNya/mangaworld" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <pattern value="^\QTestManga_GetAuthor\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestManga_GetState in github.com/KiritoNya/mangaworld" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="mangaworld" />
      <working_directory value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/KiritoNya/mangaworld" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <pattern value="^\QTestManga_GetState\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestManga_GetType in github.com/KiritoNya/mangaworld" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="mangaworld" />
      <working_directory value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/KiritoNya/mangaworld" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <pattern value="^\QTestManga_GetType\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestManga_GetVisual in github.com/KiritoNya/mangaworld" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="mangaworld" />
      <working_directory value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/KiritoNya/mangaworld" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <pattern value="^\QTestManga_GetVisual\E$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestManga_GetVisual in github.com/KiritoNya/mangaworld" />
        <item itemvalue="Go Test.TestManga_GetState in github.com/KiritoNya/mangaworld" />
        <item itemvalue="Go Test.TestManga_GetType in github.com/KiritoNya/mangaworld" />
        <item itemvalue="Go Test.TestManga_GetArtists in github.com/KiritoNya/mangaworld" />
        <item itemvalue="Go Test.TestManga_GetAuthor in github.com/KiritoNya/mangaworld" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>